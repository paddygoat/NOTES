Requirements:
Jetson TX2 flashed with JetPack 3.3.
sudo apt-get update
sudo killall apt apt-get
sudo apt-get upgrade

sudo ~/jetson_clocks.sh && sudo nvpmodel -m0

Firstly, check instructions here: https://docs.nvidia.com/deeplearning/digits/digits-installation/index.html
Then: https://github.com/NVIDIA/DIGITS/blob/master/docs/BuildDigits.md
or https://docs.nvidia.com/deeplearning/digits/digits-installation/index.html

# Download new list of packages
sudo apt-get update

sudo apt-get install --no-install-recommends git graphviz python-dev python-flask python-flaskext.wtf python-gevent python-h5py python-numpy python-pil python-pip python-scipy python-tk

               ------------------DONE------------------------------

sudo apt-get install autoconf automake libtool curl make g++ git python-dev python-setuptools unzip

               ------------------DONE------------------------------

DIGITS is currently (October 2019) compatiable with Protobuf 3.2.x:

export PROTOBUF_ROOT=~/protobuf
git clone https://github.com/google/protobuf.git $PROTOBUF_ROOT -b '3.2.x'
# Might need to install protobuf 3.6 to run tensorboard properly.
cd $PROTOBUF_ROOT
./autogen.sh
./configure
make "-j$(nproc)"
sudo make install
sudo ldconfig
cd python
sudo python setup.py install --cpp_implementation

              ------------------ DONE -------------------------

cd
sudo apt-get install --no-install-recommends build-essential cmake git gfortran libatlas-base-dev libboost-filesystem-dev libboost-python-dev
             
	      ----------- DONE -----------------------------------
	      
sudo apt-get install libboost-system-dev libboost-thread-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libsnappy-dev python-all-dev python-dev python-h5py python-matplotlib python-numpy python-opencv python-pil python-pip python-pydot python-scipy python-skimage python-sklearn

              ----------------- DONE --------------------------
	      
sudo apt-get install libturbojpeg
sudo ln -s /usr/lib/x86_64-linux-gnu/libturbojpeg.so.0.1.0 /usr/lib/x86_64-linux-gnu/libturbojpeg.so
failed to create symbolic link '/usr/lib/x86_64-linux-gnu/libturbojpeg.so': No such file or directory


export CAFFE_ROOT=~/caffe
git clone https://github.com/NVIDIA/caffe.git $CAFFE_ROOT -b 'caffe-0.15'

              ------------- Done ------------------------------

pip3 install Cython --user

sudo apt-get install libfreetype6-dev 
sudo apt-get install pkg-config
sudo apt-get install libpng12-dev
E: Package 'libpng12-dev' has no installation candidate

sudo pip install --upgrade setuptools

sudo apt install python3-pip
pip3 install -U matplotlib --user

export CAFFE_ROOT=~/caffe

##########################################################################################################
sudo pip install -r $CAFFE_ROOT/python/requirements.txt  ...... or ........
cat $CAFFE_ROOT/python/requirements.txt | xargs -n1 sudo pip install
##########################################################################################################

              ----------------- DONE. ignore the errors --------------

sudo apt-get install python-dev build-essential

sudo apt-get install protobuf-compiler

Please edit file $CAFFE_ROOT/3rdparty/cub/host/mutex.cuh
line124: --- #ifndef __arm__
line124: +++ #if !defined(__arm__) && !defined(__aarch64__)

In the new version of cmake (eg: 3.16.2), to install, download tar file from https://cmake.org/download/. 
Extract the downloaded tar file and then:

sudo apt-get install libssl-dev

cd /home/tegwyn/Downloads/cmake-3.16.2
cd $CMAKE_DOWNLOAD_PATH
./configure
make
sudo make install
cmake --version 

cd /home/nvidia/protobuf/cmake  .... or .... 
cd /home/tegwyn/protobuf/cmake
cmake -DBLAS=open

Please edit "caffe/cmake/Dependencies.cmake", at/near line 28
---  list(APPEND Caffe_LINKER_LIBS ${HDF5_LIBRARIES})
+++  list(APPEND Caffe_LINKER_LIBS ${HDF5_LIBRARIES} ${HDF5_HL_LIBRARIES})

cd $CAFFE_ROOT
mkdir build
cd build
cmake ..    
 --------------   originally Could NOT find Protobuf (missing: PROTOBUF_LIBRARY PROTOBUF_INCLUDE_DIR) but now corrected
make -j"$(nproc)"               
--------------- /usr/include/c++/5/typeinfo:39:37: error: expected ‘}’ before end of line

	I solved this problem by modifying CMakeList.txt
	Orginal:

	# ---[ Flags
	if(UNIX OR APPLE)
	  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall")
	endif()if()

	Modified:

	# ---[ Flags
	if(UNIX OR APPLE)
 	 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall -std=c++11")
	endif()if()

make install


pip install wheel
then
python setup.py bdist_wheel 

      File "/tmp/pip-install-ee4mtctz/pydot/setup.py", line 6, in <module>
        import pydot
      File "/tmp/pip-install-ee4mtctz/pydot/pydot.py", line 31
        except Exception, e:
                        ^
    SyntaxError: invalid syntax

pip3 install pydot --user

cd
DIGITS_ROOT=~/digits
git clone https://github.com/NVIDIA/DIGITS.git $DIGITS_ROOT

pip install -r $DIGITS_ROOT/requirements.txt --user
pydot>=1.0.28,<=1.0.29  ..... delete this line in requirements.txt above.
numpy>=1.8.1,<=1.14.0   ... Removed from above

ERROR: jupyter-client 5.3.1 has requirement python-dateutil>=2.1, but you'll have python-dateutil 1.5 which is incompatible.
ERROR: jsonschema 3.0.2 has requirement six>=1.11.0, but you'll have six 1.10.0 which is incompatible.
ERROR: tensorflow-gpu 1.14.0+nv19.7 has requirement numpy<2.0,>=1.14.5, but you'll have numpy 1.14.0 which is incompatible.
ERROR: tensorflow-gpu 1.14.0+nv19.7 has requirement protobuf>=3.6.1, but you'll have protobuf 3.2.0 which is incompatible.
ERROR: tensorboard 1.14.0 has requirement protobuf>=3.6.0, but you'll have protobuf 3.2.0 which is incompatible.
ERROR: tensorboard 1.14.0 has requirement setuptools>=41.0.0, but you'll have setuptools 20.7.0 which is incompatible.
ERROR: pandas 0.25.3 has requirement python-dateutil>=2.6.1, but you'll have python-dateutil 1.5 which is incompatible.
ERROR: markdown 3.1.1 has requirement setuptools>=36, but you'll have setuptools 20.7.0 which is incompatible.
ERROR: uff 0.6.3 has requirement protobuf>=3.3.0, but you'll have protobuf 3.2.0 which is incompatible.

pip install requests --user

python
import skimage.io
import requests

error: invalid command 'bdist_wheel'

pip install -e $DIGITS_ROOT --user

export CAFFE_ROOT=/home/nvidia/caffe
export PYTHONPATH=/home/nvidia/caffe/python:$PYTHONPATH

export CAFFE_ROOT=/home/tegwyn/caffe
export PYTHONPATH=/home/tegwyn/caffe/python:$PYTHONPATH
PYTHONPATH=$HOME/caffe/python:$PYTHONPATH

Starting the server:

# export CAFFE_ROOT=/home/nvidia/caffe
export CAFFE_ROOT=/home/tegwyn/caffe
cd digits
./digits-devserver

sudo ~/jetson_clocks.sh && sudo nvpmodel -m0 && cd digits && export CAFFE_ROOT=/home/nvidia/caffe && ./digits-devserver


Now paste 'http://localhost:5000/' into browser url tab. (Starts a server at http://localhost:5000/)



Now refer to: https://github.com/NVIDIA/DIGITS/blob/master/docs/GettingStarted.md
or: https://github.com/dusty-nv/jetson-inference:

git clone https://github.com/dusty-nv/jetson-inference
cd jetson-inference
git submodule update --init
mkdir build
cd build
cmake ../
cd jetson-inference/build
make

Test object detection on dogs:
Find USB camera: 
ls -ltrh /dev/video*

Find detectnet-camera.cpp and change line 39:

#define DEFAULT_CAMERA -1	// -1 for onboard camera, or change to index of /dev/video V4L2
                                // 0 for USB camera ????
				
cd jetson-inference/build
make
				
$ cd && cd jetson-inference/build/aarch64/bin && NET=networks/DetectNet-COCO-Dog && sudo ./detectnet-camera \
--prototxt=$NET/deploy.prototxt \
--model=$NET/snapshot_iter_38600.caffemodel \

Download example COCO dataset:
wget --no-check-certificate https://nvidia.box.com/shared/static/tdrvaw3fd2cwst2zu2jsi0u43vzk8ecu.gz -O coco.tar.gz
tar -xzvf coco.tar.gz

Caffe model pre-trained: http://dl.caffe.berkeleyvision.org/bvlc_googlenet.caffemodel

python -m digits.download_data mnist ~/mnist
sudo ~/jetson_clocks.sh          .............. activates the fan !!!
sudo ~/jetson_clocks.sh --show
sudo ~/tegrastats

/home/nvidia/mnist/train/



Other notes:

ImportError: libprotobuf.so.12: cannot open shared object file: No such file or directory
Bad key "patch.force_edgecolor" on line 33 in
/home/nvidia/.local/lib/python2.7/site-packages/matplotlib/mpl-data/stylelib/_classic_test.mplstyle.
You probably need to get an updated matplotlibrc file from
http://github.com/matplotlib/matplotlib/blob/master/matplotlibrc.template
or from the matplotlib source distribution



Error ...... ValueError: Caffe executable not found at "/home/mx/caffe/build/tools"
Error ...... ValueError: Caffe executable not found in PATH ........... export CAFFE_ROOT=/home/mx/caffe/



To fix the problem, all you need to do is to remove the lock files. You can do that easily using the commands below:

sudo rm /var/lib/apt/lists/lock
sudo rm /var/cache/apt/archives/lock
sudo rm /var/lib/dpkg/lock
After that, reconfigure the packages

sudo dpkg --configure -a

The command to remove an apt repository is apt-add-repository with the -r option which will remove instead of add the repository. So in your case, the full command would be:

sudo add-apt-repository -r ppa:colingille/freshlight
